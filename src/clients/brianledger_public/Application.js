// Generated by CoffeeScript 1.10.0
(function() {
  var Authenticator, Information, MessageBoard, Resume,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Information = require("./subapplications/Information.coffee").Information;

  MessageBoard = require("./subapplications/message_board/message_board.coffee").MessageBoard;

  Resume = require("./subapplications/Resume.coffee").Resume;

  Authenticator = require("./subapplications/authenticator/authenticator.coffee").Authenticator;

  exports.Application = (function(superClass) {
    extend(Application, superClass);

    Application.prototype.routes = {
      '': "stop",
      ':route/': "default_navigation"
    };

    function Application() {
      this.default_navigation = bind(this.default_navigation, this);
      this.toggle_running = bind(this.toggle_running, this);
      this.is_stopped = bind(this.is_stopped, this);
      this.stop = bind(this.stop, this);
      this.start = bind(this.start, this);
      Application.__super__.constructor.call(this, this.routes);
      this.pure = $("<div class=\"combine align-top\">\n	<div id=\"sidebar\" class=\"combine align-right\">\n\n		<div id=\"profile-picture\" class=\"cell\">\n			<img src=\"/cdn/images/profile_picture.jpg\">\n		</div>\n\n		<div id=\"navigator\" class=\"cell\" style=\"display: none\">\n			<a href=\"/information/\">Information</a>\n			<a href=\"/message_board/\">Message Board</a>\n			<a href=\"/resume/\">Résumé</a>\n			<a href=\"/sign_in/\">Sign In</a>\n		</div>\n\n	</div>\n</div>");
      this.profile_picture = this.pure.find("#profile-picture");
      this.navigator = this.pure.find("#navigator");
      this.information = new Information();
      this.information.pure.appendTo(this.pure);
      this.message_board = new MessageBoard();
      this.message_board.pure.appendTo(this.pure);
      this.resume = new Resume();
      this.resume.pure.appendTo(this.pure);
      this.authenticator = new Authenticator();
      this.authenticator.pure.appendTo(this.pure);
      this.profile_picture.click((function(_this) {
        return function() {
          return _this.toggle_running();
        };
      })(this));
      this.intercept_internal_links();
      Backbone.history.start({
        pushState: true,
        silent: true
      });
    }

    Application.prototype.start = function() {
      var fragment;
      this.navigator.slideDown(300);
      if ((fragment = Backbone.history.fragment) !== "") {
        return Backbone.history.loadUrl(fragment);
      }
    };

    Application.prototype.stop = function() {
      this.information.close();
      this.message_board.close();
      this.authenticator.close();
      return this.navigator.slideUp(300);
    };

    Application.prototype.is_stopped = function() {
      return this.navigator.css('display') === "none";
    };

    Application.prototype.toggle_running = function() {
      if (this.is_stopped()) {
        return this.start();
      } else {
        return this.stop();
      }
    };

    Application.prototype.default_navigation = function(route) {
      if (this.is_stopped()) {
        this.start();
      }
      switch (route.split("/")[0]) {
        case "message_board":
          return this.resume.close((function(_this) {
            return function() {
              return _this.information.close(function() {
                return _this.authenticator.close(function() {
                  return _this.message_board.open();
                });
              });
            };
          })(this));
        case "information":
          return this.resume.close((function(_this) {
            return function() {
              return _this.message_board.close(function() {
                return _this.authenticator.close(function() {
                  return _this.information.open();
                });
              });
            };
          })(this));
        case "resume":
          return this.resume.close((function(_this) {
            return function() {
              return _this.information.close(function() {
                return _this.message_board.close(function() {
                  return _this.authenticator.close(function() {
                    return _this.resume.open();
                  });
                });
              });
            };
          })(this));
        case "sign_in":
          return this.resume.close((function(_this) {
            return function() {
              return _this.message_board.close(function() {
                return _this.information.close(function() {
                  _this.authenticator.reset();
                  return _this.authenticator.open();
                });
              });
            };
          })(this));
        case "sign_up":
          return this.resume.close((function(_this) {
            return function() {
              return _this.message_board.close(function() {
                return _this.information.close(function() {
                  _this.authenticator.reset();
                  return _this.authenticator.open();
                });
              });
            };
          })(this));
        default:
          return console.warn("Unrecognized route: %s", route);
      }
    };

    Application.prototype.intercept_internal_links = function() {
      return $(document).on('click', (function(_this) {
        return function(event) {
          console.log("click", event.target.host, window.location.host);
          event.preventDefault();
          if (event.target.host === window.location.host) {
            return Backbone.history.navigate(event.target.pathname, {
              trigger: true
            });
          }
        };
      })(this));
    };

    return Application;

  })(Backbone.Router);

}).call(this);

//# sourceMappingURL=Application.js.map
